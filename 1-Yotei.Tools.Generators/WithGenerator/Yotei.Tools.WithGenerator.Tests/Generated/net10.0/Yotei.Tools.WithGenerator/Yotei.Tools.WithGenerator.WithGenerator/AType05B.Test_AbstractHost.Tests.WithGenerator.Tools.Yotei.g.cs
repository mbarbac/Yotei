// <auto-generated>
#nullable enable

namespace Yotei.Tools.WithGenerator.Tests
{
    partial class Test_AbstractHost
    {
        partial class AType05B
        {
            /// <summary>
            /// Emulates the 'with' keyword for the 'Name' member.
            /// </summary>
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("WithGenerator", "0.7.0.0")]
            public abstract new AType05B
            WithName(System.String? v_Name);
            
            Yotei.Tools.WithGenerator.Tests.Test_AbstractHost.IFace05A
            Yotei.Tools.WithGenerator.Tests.Test_AbstractHost.IFace05A.WithName(System.String? value) => WithName(value);
            
            Yotei.Tools.WithGenerator.Tests.Test_AbstractHost.IFace05B
            Yotei.Tools.WithGenerator.Tests.Test_AbstractHost.IFace05B.WithName(System.String? value) => WithName(value);
            
            /// <summary>
            /// Emulates the 'with' keyword for the 'Age' member.
            /// </summary>
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("WithGenerator", "0.7.0.0")]
            public abstract new AType05B
            WithAge(System.Int32 v_Age);
        }
    }
}
